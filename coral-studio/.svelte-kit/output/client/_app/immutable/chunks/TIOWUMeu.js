var $=Object.defineProperty;var g=e=>{throw TypeError(e)};var x=(e,t,s)=>t in e?$(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var h=(e,t,s)=>x(e,typeof t!="symbol"?t+"":t,s),b=(e,t,s)=>t.has(e)||g("Cannot "+s);var o=(e,t,s)=>(b(e,t,"read from private field"),s?s.call(e):t.get(e)),a=(e,t,s)=>t.has(e)?g("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(e):t.set(e,s);import{a as i,g as u,b as d,p as C}from"./BrhzG-up.js";import{C as w}from"./B0nNA66l.js";var n,c;class S{constructor({host:t,appId:s,privacyKey:p,session:k},f){h(this,"socket");a(this,n,i(!1));a(this,c,i(C([])));this.socket=new WebSocket(`http://${t}/debug/${s}/${p}/${k}/${f}/logs`),this.socket.onopen=()=>{this.connected=!0},this.socket.onerror=()=>{this.connected=!1,this.socket.close()},this.socket.onclose=l=>{this.logs=[],this.connected=!1},this.socket.onmessage=l=>{let r=null;try{r=JSON.parse(l.data)}catch(m){console.log("??",m);return}r&&this.logs.push(r)}}get connected(){return u(o(this,n))}set connected(t){d(o(this,n),t,!0)}get logs(){return u(o(this,c))}set logs(t){d(o(this,c),t,!0)}}n=new WeakMap,c=new WeakMap;const J=new w("agentLogs");export{S as A,J as l};
